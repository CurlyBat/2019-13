type user {
  id: ID! @id
  name: String!
  picture: String!
  email: String! @unique
  projects: [project]! @relation(name: "ProjectsByUser")
  authes: [project_auth]! @relation(name : "AuthesByUser")
  likes: [like]! @relation(name : "LikesByUser")
}
type project {
  id: ID! @id
  title: String!
  description: String!
  like: Int!
  private: Boolean!
  owner: user! @relation(link : TABLE, name: "ProjectByUser")
  blocks: [block]! @relation(name: "BlocksByProject")
  authes: [project_auth]! @relation(name: "AuthesByProject")
  likes: [like]! @relation(name : "LikesByProject")
}
type project_auth {
  id: ID! @id
  project: project! @relation(link : TABLE, name:"AuthesByProject")
  user: user! @relation(link : TABLE, name: "AuthesByUser")
}
type block {
  id: ID! @id
  type: String!
  position_x: Float
  position_y: Float
  next_element: block @relation(link : TABLE, name: "NextElementByBlock")
  first_child_element: block @relation(link : TABLE, name: "FirstChildElementByBlock")
  second_child_element: block @relation(link : TABLE, name: "SecondChidlElementByBlock")
  output_element: block @relation(link : TABLE, name: "OutputElementByBlock")
  project: project! @relation(link : TABLE, name:"BlocksByProject")
  input_values: [input_value]! @relation(link : TABLE, name:"ArgumentsByBlock")
}
type input_value {
  id: ID! @id
  value: Float!
  block: block! @relation(link : TABLE, name:"ArgumentByBlock")
  order: Int!
}
type like {
  id: ID! @id
  project: project! @relation(link : TABLE, name:"LikesByProject")
  user: user! @relation(link : TABLE, name:"LikesByUser")
  order: Int!
}