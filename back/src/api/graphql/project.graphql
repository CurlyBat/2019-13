scalar Upload
type project {
  id: ID!
  title: String!
  description: String!
  like: Int!
  private: Boolean!
  owner: user!
  blocks: [block]!
  authes: [project_auth]!
  likes: [like]!
  isLiked: Boolean!
  likeCount: Int!
  images: [Image]!
}

type Query {
  projects: [project]
  findProjectById(projectId: String!): project
  findProjectsByUserId: [project]!
}
type Mutation {
  createProjectAndBlocks(projectTitle: String!, input: [createBlockInput]!, images: [Upload]!): String!
  updateProjectAndBlocks(projectId: String!, projectTitle:String!, input: [createBlockInput], images: [Upload]!): Boolean!
  deleteProjectAndBlocks(projectId: String!): Boolean!
}